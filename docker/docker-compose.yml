version: '2.1'
services:
  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "ostock_dev"

    volumes:
        - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
        - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      backend:
        aliases:
          - "database"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    build:
        context: ../configserver
        dockerfile: Dockerfile
        args:
          - CONFIGSERVER_PORT=8089
          - JAR_FILE=target/configserver-0.0.1-SNAPSHOT.jar
    ports:
       - "${CONFIGSERVER_PORT}:${CONFIGSERVER_PORT}"
    environment:
      ENCRYPT_KEY: "fje83Ki8403Iod87dne7Yjsl3THueh48jfuO9j4U2hf64Lo"
    entrypoint: ["java","-cp","app:app/lib/*","com.optimagrowth.configserver.ConfigurationServerApplication","--server.port=${CONFIGSERVER_PORT}"]
    networks:
      backend:
        aliases:
          - "configserver"
  licensingservice:
    build:
      context: ../licensing-service
      dockerfile: Dockerfile
      args:
        - JAR_FILE=target/licensing-service-0.0.2-SNAPSHOT.jar
    environment:
      PROFILE: "dev"
      CONFIGSERVER_URI: "http://configserver:${CONFIGSERVER_PORT}"
      CONFIGSERVER_PORT:   "${CONFIGSERVER_PORT}"
      DATABASESERVER_PORT: "5432"
      ENCRYPT_KEY:       "IMSYMMETRIC"
    entrypoint: ["java","-cp","app:app/lib/*","com.optimagrowth.license.LicenseServiceApplication","--spring.cloud.config.uri=http://configserver:${CONFIGSERVER_PORT}"]
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend

networks:
  backend:
    driver: bridge